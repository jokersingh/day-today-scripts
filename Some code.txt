import org.apache.arrow.dataset.FileSystemDatasetFactory;
import org.apache.arrow.memory.RootAllocator;
import org.apache.arrow.vector.ipc.ReadOptions;
import org.apache.arrow.vector.ipc.message.MessageSerializer;
import org.apache.arrow.vector.ipc.ReadChannel;
import org.apache.arrow.vector.types.pojo.Schema;

import software.amazon.awssdk.auth.credentials.AwsCredentialsProvider;
import software.amazon.awssdk.auth.credentials.DefaultCredentialsProvider;
import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.services.s3.S3Client;
import software.amazon.awssdk.services.s3.model.GetObjectRequest;

import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.nio.channels.Channels;
import java.nio.channels.ReadableByteChannel;

public class ReadParquetFromS3 {
    public static void main(String[] args) throws IOException {
        String bucketName = "YOUR_BUCKET_NAME";
        String key = "YOUR_FILE_KEY";
        Region region = Region.YOUR_REGION;
        
        AwsCredentialsProvider credentialsProvider = DefaultCredentialsProvider.create();
        S3Client s3 = S3Client.builder().region(region).credentialsProvider(credentialsProvider).build();

        FileSystemDatasetFactory factory = new FileSystemDatasetFactory();
        factory.setFileSystem(URI.create("s3://" + bucketName), s3);
        
        // Adjust the path to your file in S3
        String path = "s3://" + bucketName + "/" + key;
        
        try (ReadableByteChannel channel = Channels.newChannel(s3.getObject(GetObjectRequest.builder().bucket(bucketName).key(key).build()));
             InputStream inputStream = Channels.newInputStream(channel)) {
            ReadChannel readChannel = ReadChannel.wrap(inputStream);
            Schema schema = factory.inspect(path);
            
            RootAllocator allocator = new RootAllocator(Long.MAX_VALUE);
            ReadOptions options = new ReadOptions();
            options.useZeroCopy(true);
            
            MessageSerializer.deserializeSchema(readChannel, allocator);
            // Read the Parquet file contents here using Arrow APIs
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
public class SplitString {

    public static String[] splitWithQuotes(String text) {
        StringBuilder currentWord = new StringBuilder();
        boolean inQuotes = false;
        List<String> words = new ArrayList<>();

        for (char c : text.toCharArray()) {
            if (c == '"') {
                inQuotes = !inQuotes;
            } else if (c == ',' && !inQuotes) {
                words.add(currentWord.toString());
                currentWord.setLength(0);
            } else {
                currentWord.append(c);
            }
        }

        words.add(currentWord.toString());
        return words.toArray(new String[0]);
    }

    public static void main(String[] args) {
        String text = "This is a, string \"with, commas\" and another word.";
        String[] words = splitWithQuotes(text);
        System.out.println(Arrays.toString(words));
    }
}


## Subject: Farewell and Best Wishes!

Hi Team,

Today marks my last day at Capital One. As I move on to new opportunities, I wanted to take a moment to express my sincere gratitude to each and every one of you. 

Working alongside all of you has been a true pleasure. I've learned so much from your expertise and guidance, especially Gopi, Suresh, Priya, James, and Sal. 

A huge thank you also goes out to Ramya, Shyam, Zac, Chinmay, Navya, and the rest of the amazing team for your unwavering support and collaboration throughout my time here. You've all made a significant impact on my experience.

I wish you all continued success in your endeavors. I have no doubt you'll continue to achieve great things. Here's hoping our paths cross again in the future!

Best regards,

[Your Name] 
